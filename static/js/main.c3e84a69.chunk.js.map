{"version":3,"sources":["Pagination.js","App.js","index.js"],"names":["Pagination","total","perPage","activePage","perPagesList","onNext","onPrevious","onPageChange","onChangePerPage","pagesCount","Math","ceil","maxCountItems","className","role","value","onChange","event","target","map","page","key","href","onClick","preventDefault","disabled","Array","from","_","pageIndex","classNames","onPageChangeHandler","defaultProps","App","state","totalPages","chooseNextPage","setState","prevState","choosePreviousPage","setActivePage","setPerPage","parseInt","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yOAIaA,EAAa,SAAC,GASpB,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,WACAC,EAKI,EALJA,aACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAgCMC,EAAaC,KAAKC,KAAKV,EAAQC,GAC/BU,EAAgBT,IAAeM,EACjCR,EACAE,EAAaD,EAEjB,OACE,oCACE,yBACEW,UAAU,aACVC,KAAK,cAEL,yBAAKD,UAAU,UACb,4BACEE,MAAOb,EACPc,SA5CqB,SAACC,GAC1BA,EAAMC,OAAOH,QAAUb,GACzBM,EAAgBS,KA4CTb,EAAae,KAAI,SAAAC,GAAI,OACpB,4BAAQC,IAAKD,GACVA,QAKT,uBACEE,KAAK,IACLT,UAAU,sBACVU,QA1CkB,SAACN,GACzBA,EAAMO,iBAEFrB,EAAa,GACfG,EAAWW,IAuCPQ,SAAyB,IAAftB,GAJZ,YAQA,uBACEmB,KAAK,IACLT,UAAU,kBACVU,QA1Dc,SAACN,GACrBA,EAAMO,iBAEFrB,EAAaM,GACfJ,EAAOY,IAuDHQ,SAAUtB,IAAeM,GAJ3B,aAQA,wBAAII,UAAU,mBACXa,MAAMC,KAAK,IAAID,MAAMjB,IAAaU,KAAI,SAACS,EAAGC,GAAJ,OACrC,wBAAIR,IAAG,eAAUQ,EAAY,IAC3B,uBACEP,KAAK,IACLT,UAAWiB,IACT,kBACA,CAAE,aAAcD,EAAY,IAAM1B,IAEpCoB,QAAS,SAAAN,GAAK,OAxDA,SAACA,EAAOG,GAClCH,EAAMO,iBAEFJ,IAASjB,GACXI,EAAaa,GAoDeW,CAAoBd,EAAOY,EAAY,KAExDA,EAAY,SAMvB,yCACO1B,EAAa,GAAKD,EAAU,EADnC,cAC0CU,EAD1C,eAC8DX,MAMpED,EAAWgC,aAAe,CACxB9B,QAAS,EACTC,WAAY,EACZC,aAAc,CAAC,EAAG,EAAG,GAAI,K,UCzGrBA,EAAe,CAAC,EAAG,EAAG,GAAI,IA+DjB6B,E,4MA5DbC,MAAQ,CACNC,WAAY,GACZhC,WAAY,EACZD,QAAS,I,EAGXkC,eAAiB,SAACnB,GAChBA,EAAMO,iBAEN,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1BnC,WAAYmC,EAAUnC,WAAa,O,EAIvCoC,mBAAqB,SAACtB,GACpBA,EAAMO,iBAEN,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1BnC,WAAYmC,EAAUnC,WAAa,O,EAIvCqC,cAAgB,SAACpB,GACf,EAAKiB,SAAS,CACZlC,WAAYiB,K,EAIhBqB,WAAa,SAACxB,GACZ,EAAKoB,SAAS,CACZnC,QAASwC,SAASzB,EAAMC,OAAOH,MAAO,IACtCZ,WAAY,K,4CAIhB,WAAU,IAAD,EAKHwC,KAAKT,MAHPC,EAFK,EAELA,WACAjC,EAHK,EAGLA,QACAC,EAJK,EAILA,WAGF,OACE,yBAAKU,UAAU,aACb,wBAAIA,UAAU,cAAd,cACA,kBAAC,EAAD,CACEZ,MAAOkC,EACPjC,QAASA,EACTC,WAAYA,EACZC,aAAcA,EACdC,OAAQsC,KAAKP,eACb9B,WAAYqC,KAAKJ,mBACjBhC,aAAcoC,KAAKH,cACnBhC,gBAAiBmC,KAAKF,kB,GAtDdG,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c3e84a69.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const Pagination = ({\n  total,\n  perPage,\n  activePage,\n  perPagesList,\n  onNext,\n  onPrevious,\n  onPageChange,\n  onChangePerPage,\n}) => {\n  const onPerPageChangeHandler = (event) => {\n    if (event.target.value !== perPage) {\n      onChangePerPage(event);\n    }\n  };\n\n  const onNextHandler = (event) => {\n    event.preventDefault();\n\n    if (activePage < pagesCount) {\n      onNext(event);\n    }\n  };\n\n  const onPreviousHandler = (event) => {\n    event.preventDefault();\n\n    if (activePage > 1) {\n      onPrevious(event);\n    }\n  };\n\n  const onPageChangeHandler = (event, page) => {\n    event.preventDefault();\n\n    if (page !== activePage) {\n      onPageChange(page);\n    }\n  };\n\n  const pagesCount = Math.ceil(total / perPage);\n  const maxCountItems = activePage === pagesCount\n    ? total\n    : activePage * perPage;\n\n  return (\n    <>\n      <nav\n        className=\"pagination\"\n        role=\"navigation\"\n      >\n        <div className=\"select\">\n          <select\n            value={perPage}\n            onChange={onPerPageChangeHandler}\n          >\n            {perPagesList.map(page => (\n              <option key={page}>\n                {page}\n              </option>\n            ))}\n          </select>\n        </div>\n        <a\n          href=\"/\"\n          className=\"pagination-previous\"\n          onClick={onPreviousHandler}\n          disabled={activePage === 1}\n        >\n          Previous\n        </a>\n        <a\n          href=\"/\"\n          className=\"pagination-next\"\n          onClick={onNextHandler}\n          disabled={activePage === pagesCount}\n        >\n          Next page\n        </a>\n        <ul className=\"pagination-list\">\n          {Array.from(new Array(pagesCount)).map((_, pageIndex) => (\n            <li key={`page-${pageIndex + 1}`}>\n              <a\n                href=\"/\"\n                className={classNames(\n                  'pagination-link',\n                  { 'is-current': pageIndex + 1 === activePage },\n                )}\n                onClick={event => onPageChangeHandler(event, pageIndex + 1)}\n              >\n                {pageIndex + 1}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <span>\n        {`${(activePage - 1) * perPage + 1} - ${maxCountItems} of ${total}`}\n      </span>\n    </>\n  );\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  activePage: 1,\n  perPagesList: [3, 5, 10, 20],\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number,\n  activePage: PropTypes.number,\n  perPagesList: PropTypes.arrayOf(PropTypes.number),\n  onNext: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onChangePerPage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './Pagination';\nimport 'bulma';\n\nconst perPagesList = [3, 5, 10, 20];\n\nclass App extends React.Component {\n  state = {\n    totalPages: 42,\n    activePage: 1,\n    perPage: 10,\n  }\n\n  chooseNextPage = (event) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      activePage: prevState.activePage + 1,\n    }));\n  }\n\n  choosePreviousPage = (event) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      activePage: prevState.activePage - 1,\n    }));\n  }\n\n  setActivePage = (page) => {\n    this.setState({\n      activePage: page,\n    });\n  }\n\n  setPerPage = (event) => {\n    this.setState({\n      perPage: parseInt(event.target.value, 10),\n      activePage: 1,\n    });\n  }\n\n  render() {\n    const {\n      totalPages,\n      perPage,\n      activePage,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title is-3\">Pagination</h1>\n        <Pagination\n          total={totalPages} /* required */\n          perPage={perPage}\n          activePage={activePage}\n          perPagesList={perPagesList}\n          onNext={this.chooseNextPage}\n          onPrevious={this.choosePreviousPage}\n          onPageChange={this.setActivePage}\n          onChangePerPage={this.setPerPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}